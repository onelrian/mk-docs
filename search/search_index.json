{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My MkDocs Project \u00b6 This is an example MkDocs project using the Material theme. Get Started \u00b6 Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Home"},{"location":"#welcome-to-my-mkdocs-project","text":"This is an example MkDocs project using the Material theme.","title":"Welcome to My MkDocs Project"},{"location":"#get-started","text":"Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Get Started"},{"location":"about/","text":"About This Project \u00b6 This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation. Key Features \u00b6 Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"About"},{"location":"about/#about-this-project","text":"This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation.","title":"About This Project"},{"location":"about/#key-features","text":"Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"Key Features"},{"location":"multipass/","text":"MULTIPASS DOCUMENTATION Multipass is a flexible and powerful tool that can be used for many purposes. In its simplest form, you can use it to quickly create and destroy Ubuntu VMs (instances) on any host machine. But you can also use Multipass to build a local mini-cloud on your laptop, to test and develop multi-instance or container-based cloud applications.Here we're going to be seeing some basic commnads and how they would help you manipulate your Virtual machine. installing multipass You could start by installing the multipass using the commands; snap install multipass Subsequently if you no longer find interest in this tool you could simply ninstall it using the command ; snap remove multipass What is an instance An instance in the context of virtual machines (VMs) refers to an individual, isolated virtual machine that is created and run within a virtualization platform or cloud environment. It is essentially a \"copy\" or \"deployment\" of a virtual machine template or image, running its own operating system and functioning as a separate, independent computing environment.This instances could be created using the following commands multipass launch But to create an instance with a specific image use the command multipass launch jammy that is after running multipass find to check which images are available An existing instance that is in Stopped or Suspended status can be started with the multipass start command; - [x] TO start use multipass start loving-duck given that loving-duck is the existing instance - [x] TO stop use multipass stop loving-duck given that loving-duck is the existing instance - [x] TO suspend use multipass suspend loving-duck given that loving-duck is the existing instance Deleting instances To mark an instance as deleted, run: multipass delete keen-yak You can also use the --purge option to permanently delete an instance in a single command; for example: multipass delete --purge keen-yak How to use the Docker blueprint The Docker blueprint gives Multipass users an easy way to create Ubuntu instances with Docker installed. It is based on the latest LTS release of Ubuntu, and includes docker engine and Portainer To use the Docker blueprint, run multipass launch docker --name docker-vm , which will launch the docker-vm instance with default parameters. Using the Alias The alias command in Unix-like operating systems (such as Linux and macOS) is used to create shortcuts for frequently used commands. It allows you to define a custom alias or shorthand for a longer or more complex command, making it quicker and easier to execute. You'll need to add this to your shell configuration (.bashrc, .zshrc or so) for aliases to work without working with extra long commands","title":"multipass"},{"location":"short/","text":"Visual Studio is an integrated development environment (IDE) developed by Microsoft. It is widely used for developing software applications across various platforms, including web, mobile, desktop, and cloud. Here's an overview of Visual Studio and its primary features: Multi-Language Support : Visual Studio supports multiple programming languages, such as C++, C#, Python, JavaScript, and more. This makes it versatile for different types of development projects. Code Editing and Debugging : The IDE includes advanced code editors and debuggers that help developers write, test, and debug code effectively. Features like IntelliSense (code completion), syntax highlighting, and error-checking improve productivity. Project and Solution Management : Visual Studio allows developers to organize their code into projects and solutions . This feature is particularly useful for large-scale applications, where different modules or components are developed independently but still need to work together. Built-in Git Integration : Visual Studio provides seamless Git integration, allowing developers to manage repositories, stage changes, commit code, and push/pull updates directly from the IDE. Extensions and Customization : The IDE supports numerous extensions from Microsoft\u2019s marketplace, allowing developers to add extra tools, languages, themes, and debugging utilities to suit their workflow. Collaboration Tools : Visual Studio includes features for live sharing and collaborative coding, which enable teams to work together in real-time. It also integrates with platforms like Azure DevOps and GitHub. Application Testing and Profiling : The IDE provides testing tools that support unit testing, load testing, and profiling. These tools help developers ensure their applications are reliable and optimize performance. Visual Studio vs. Visual Studio Code \u00b6 It's important to distinguish Visual Studio from Visual Studio Code : - Visual Studio is a full-featured IDE designed for complex projects and enterprise-level development. - Visual Studio Code is a lightweight, highly customizable code editor that supports extensions and is widely used for web and JavaScript-based development. Visual Studio is available on Windows and macOS, with some versions offering cross-platform capabilities through extensions or third-party tools. |days|week|month |:--|:--:|--:| |monday|1|january| |tuusday|2|february| :| :) ;) :/ :o :s :z :P :D","title":"short"},{"location":"short/#visual-studio-vs-visual-studio-code","text":"It's important to distinguish Visual Studio from Visual Studio Code : - Visual Studio is a full-featured IDE designed for complex projects and enterprise-level development. - Visual Studio Code is a lightweight, highly customizable code editor that supports extensions and is widely used for web and JavaScript-based development. Visual Studio is available on Windows and macOS, with some versions offering cross-platform capabilities through extensions or third-party tools. |days|week|month |:--|:--:|--:| |monday|1|january| |tuusday|2|february| :| :) ;) :/ :o :s :z :P :D","title":"Visual Studio vs. Visual Studio Code"}]}